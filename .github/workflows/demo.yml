name: Deploy website
on:
  push:
    branches:
      - master
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Cache dependencies
        uses: actions/cache@v3 # cache npm dependencies
        with:
          path: ~/.npm
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }} # hashFiles produces a hash value based on the contents of the specified files. The hash key will change if the contents of package-lock.json change, so it remains dynamic.
      - name: Install dependencies # cache these dependencies for future jobs
        run: npm ci
      - name: Lint code
        run: npm run lint
      - name: Test code
        run: npm run test

  build:
    needs: test
    runs-on: ubuntu-latest
    outputs:
      script-file: ${{ steps.publish.outputs.script-file }}
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Install dependencies
        run: npm ci
      - name: Build website
        run: npm run build
      - name: Publish JS File
        id: publish
        run: find dist/assets/*.js -type f -execdir echo "script-file={}" >> "$GITHUB_OUTPUT" \;
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: dist-files
          path: dist

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Get build artifacts
        uses: actions/download-artifact@v3
        with: # add configuration here
          name: dist-files # name of the artifact to download, needs to match the name in the upload step
          path: dist
      - name: Output files
        run: ls
      - name: Output file name
        run: echo "${{ needs.build.outputs.script-file }}"
      - name: Deploy
        run: echo "Deploying..."
